"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.trackTransaction = trackTransaction;
exports.trackInsufficientFundsError = trackInsufficientFundsError;
const json_js_1 = require("../../utils/json.js");
const helpers_js_1 = require("./helpers.js");
const index_js_1 = require("./index.js");
/**
 * @internal
 */
async function trackTransaction(args) {
    return trackTransactionEvent({
        ...args,
        action: "transaction:sent",
    });
}
/**
 * @internal
 */
function trackTransactionEvent(args) {
    return (0, index_js_1.track)({
        client: args.client,
        ecosystem: args.ecosystem,
        data: {
            action: args.action,
            clientId: args.client.clientId,
            chainId: args.chainId,
            transactionHash: args.transactionHash,
            walletAddress: args.walletAddress,
            walletType: args.walletType,
            contractAddress: args.contractAddress,
            functionName: args.functionName,
            gasPrice: args.gasPrice,
            errorCode: (0, json_js_1.stringify)(args.error),
        },
    });
}
/**
 * @internal
 */
async function trackInsufficientFundsError(args) {
    const errorDetails = (0, helpers_js_1.getErrorDetails)(args.error);
    return (0, index_js_1.track)({
        client: args.client,
        ecosystem: args.ecosystem,
        data: {
            action: "transaction:insufficient_funds",
            clientId: args.client.clientId,
            chainId: args.chainId,
            walletAddress: args.walletAddress,
            contractAddress: args.contractAddress,
            functionName: args.functionName,
            transactionValue: args.transactionValue?.toString(),
            requiredAmount: args.requiredAmount?.toString(),
            userBalance: args.userBalance?.toString(),
            errorMessage: errorDetails.message,
            errorCode: errorDetails.code ? (0, json_js_1.stringify)(errorDetails.code) : undefined,
        },
    });
}
//# sourceMappingURL=transaction.js.map